Python’s memory allocation and deallocation method is automatic
The user does not have to preallocate or deallocate memory
Python uses two strategies for memory allocation: 
- Reference counting
- Garbage collection

Garbage collection
Garbage collection is a memory management technique used in programming languages 
to automatically reclaim memory that is no longer accessible or in use by the application.
 It helps prevent memory leaks, optimize memory usage, and ensure efficient memory 
 allocation for the program.
 
 
 
 
 Constructors are generally used for instantiating an object
 The task of constructors is to initialize(assign values) to the data members of 
 the class when an object of the class is created.
 In Python the __init__() method is called the constructor and is always called when 
 an object is created.
 
 Types of constructors :

default constructor: The default constructor is a simple constructor which doesn’t 
accept any arguments.

parameterized constructor: constructor with parameters is known as parameterized 
constructor. The parameterized constructor takes its first argument as a reference to 
the instance being constructed known as self and the rest of the arguments are provided 
by the programmer.

Destructors are called when an object gets destroyed.
In Python, destructors are not needed as much as in C++ because Python has a 
garbage collector that handles memory management automatically. 

The __del__() method is a known as a destructor method in Python. It is called when 
all references to the object have been deleted i.e when an object is garbage collected. 

